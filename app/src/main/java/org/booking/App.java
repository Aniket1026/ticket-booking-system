/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.booking;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.UUID;

import org.booking.entities.Train;
import org.booking.entities.User;
import org.booking.services.TrainService;
import org.booking.services.UserBookingService;
import org.booking.util.UserServiceUtil;

public class App {

	public static void main(String[] args) {
		System.out.println("Launching ticket booking application...");
		Scanner scn = new Scanner(System.in);
		int choice = 0;
		UserBookingService userService;
		TrainService trainService;
		try {
			userService = new UserBookingService();
			trainService = new TrainService();
		}
		catch (Exception e) {
			System.out.println("Error in loading users " + e.getMessage());
			return;
		}

		while (choice != 7) {
			System.out.println("1. Signup");
			System.out.println("2. Login");
			System.out.println("3. Fetch Bookings");
			System.out.println("4. Search a Train");
			System.out.println("5. Book a Ticket");
			System.out.println("6. Cancel a Ticket");
			System.out.println("7. Exit");
			System.out.println("Enter your choice :");
			choice = scn.nextInt();
			scn.nextLine();
			Train trainSelectedForBooking = new Train();
			switch (choice) {
				case 1 -> {
					System.out.println("Enter username :");
					String username = scn.nextLine();
					System.out.println("Enter password :");
					String password = scn.nextLine();
					User newUser = new User(username, password, UserServiceUtil.hashedPassword(password),
							new ArrayList<>(),
							UUID.randomUUID().toString());
					userService.userSignup(newUser);
				}
				case 2 -> {
					System.out.println("Enter username :");
					String loginUsername = scn.nextLine();
					System.out.println("Enter password :");
					String loginPassword = scn.nextLine();
					User user = new User(loginUsername, loginPassword, UserServiceUtil.hashedPassword(loginPassword),
							new ArrayList<>(),
							UUID.randomUUID().toString());
					userService.userLogin(user);
				}
				case 3 -> {
					System.out.println("Enter username :");
					String usernameForBooking = scn.nextLine();
					User userForBooking = new User(usernameForBooking, "", "", new ArrayList<>(), "");
					userService.fetchBooking();
				}
				case 4 -> {
					System.out.println("Enter source :");
					String source = scn.nextLine();
					System.out.println("Enter destination :");
					String destination = scn.nextLine();
					List<Train> trains = UserBookingService.searchTrain(source, destination);
					trains.forEach(train -> {
						System.out.println(train.getTrainId());
					});
				}
				case 5 -> {
					System.out.println("Select a seat");
					List<List<Integer>> seats = trainSelectedForBooking.getSeats();
					for (List<Integer> row: seats){
						for (Integer val: row){
							System.out.print(val+" ");
						}
						System.out.println();
					}
					System.out.println("Enter row :");
					int row = scn.nextInt();
					System.out.println("Enter column :");
					int column = scn.nextInt();
					boolean booked = userService.bookTicket(trainSelectedForBooking, row, column);
					if (booked) {
						System.out.println("Ticket booked successfully");
					}else {
						System.out.println("Ticket booking failed");
					}
				}
				case 6 -> {
					System.out.println("Enter train id :");
					String trainId = scn.nextLine();
					System.out.println("Enter ticket id :");
					String ticketId = scn.nextLine();

					boolean ticket = trainService.cancelBooking(trainId,ticketId);
					if (ticket)
						System.out.println("Ticket cancelled successfully");
					else
						System.out.println("Ticket cancellation failed");
				}
				case 7 -> System.out.println("Exiting...");
				default -> System.out.println("Invalid choice");
			}
		}
	}
}
